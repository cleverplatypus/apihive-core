import{_ as a,c as t,o as e,a3 as i}from"./chunks/framework.DJIHrpKd.js";const u=JSON.parse('{"title":"Optional Features","description":"","frontmatter":{},"headers":[],"relativePath":"guide/optional-features.md","filePath":"guide/optional-features.md"}'),r={name:"guide/optional-features.md"};function n(o,s,p,l,d,h){return e(),t("div",null,[...s[0]||(s[0]=[i(`<h1 id="optional-features" tabindex="-1">Optional Features <a class="header-anchor" href="#optional-features" aria-label="Permalink to &quot;Optional Features&quot;">​</a></h1><p>APIHive has some optional features that were made available as separate modules to reduce the bundle size of the core library.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Feature Name</th><th>Description</th></tr></thead><tbody><tr><td>upload-progress</td><td>Adds support for tracking upload progress</td></tr><tr><td>download-progress</td><td>Adds support for tracking download progress</td></tr><tr><td>request-hash</td><td>Adds support for generating a hash for the request</td></tr><tr><td>adapters</td><td>Adds support for adapters</td></tr><tr><td>sse-request</td><td>Adds support for Server-Sent Events</td></tr><tr><td>retry</td><td>Adds support for retrying requests</td></tr></tbody></table><h2 id="how-to-enable-features" tabindex="-1">How to enable features <a class="header-anchor" href="#how-to-enable-features" aria-label="Permalink to &quot;How to enable features&quot;">​</a></h2><p>To enable a feature, import the feature class from <code>@apihive/core/features/[feature-name]</code> and call <code>use(new FeatureClass())</code> on the factory instance.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { HTTPRequestFactory } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@apihive/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { UploadProgressFeature } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@apihive/core/features/upload-progress&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTTPRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UploadProgressFeature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div>`,7)])])}const c=a(r,[["render",n]]);export{u as __pageData,c as default};
