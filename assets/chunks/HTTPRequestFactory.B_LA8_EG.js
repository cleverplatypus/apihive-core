const p={none:-1,trace:0,debug:1,info:2,warn:3,error:4,fatal:5};class y{constructor(){this.level="trace"}withMinimumLevel(e){return this.level=e,new Proxy(this,{get:(t,r)=>r==="withMinimumLevel"?s=>t.withMinimumLevel(s):r in p?p[r]>=p[this.level]?(...i)=>t[r](...i):()=>{}:t[r]})}trace(e,...t){console.trace(e,...t)}debug(e,...t){console.debug(e,...t)}info(e,...t){console.info(e,...t)}warn(e,...t){console.warn(e,...t)}error(e,...t){console.error(e,...t)}fatal(e,...t){console.error(e,...t)}}class g extends Error{constructor(e,t,r){super(t),this.code=e,this.message=t,this.body=r}isUnauthorized(){return this.code===401}isNotFound(){return this.code===404}isForbidden(){return this.code===403}isMethodNotAllowed(){return this.code===405}isConflict(){return this.code===409}isTooManyRequests(){return this.code===429}isInternalServerError(){return this.code===500}isNotImplemented(){return this.code===501}isTimedOut(){return this.code===504}isAborted(){return this.code===-1}}function l(u,...e){return typeof u=="function"?u(...e):u}const m=["^application/(?:.+\\+)?json$"],R=["^text/.*$","^application/.*\\+xml$","^image/.*\\+xml$","^application/javascript$","^application/xml$","application/x-www-form-urlencoded"];async function w(u,e){const t=e.responseBodyTransformers||[];if(!t.length)return u;let r=u;for(const s of t)r=await s(r,e);return r}function q({templateURLHistory:u,urlParams:e,queryParams:t,config:r}){let i=u[u.length-1];for(const a in e){const h=e[a],c=l(h,r);i=i.replace(`{{${a}}}`,String(c))}const o=new URL(i,i.startsWith("http")?void 0:"http://dummy");for(const a of Object.keys(t)){const h=t[a],c=l(h,r);if(c!=null)if(Array.isArray(c))for(const d of c)o.searchParams.append(a,String(d));else o.searchParams.append(a,String(c))}const n=o.toString();if(!i.startsWith("http")){const a=n.indexOf("://"),h=n.indexOf("/",a+3);return n.slice(h)}return n}class b{constructor({url:e,method:t,defaultConfigBuilders:r,featureDelegates:s,factoryMethods:i,factory:o,wrapErrors:n=!1}){this.wasUsed=!1,this.logger=new y,this.fetchBody=null,this._abortController=new AbortController,this.readOnlyConfig=null,this.beforeFetchHooks=[],this.abortListeners=[],this.wrapErrors=!1,this.readResponse=async a=>{var c,d;const h=(c=a.headers.get("content-type"))==null?void 0:c.split(/;\s?/)[0];return h?this.config.jsonMimeTypes.find(f=>new RegExp(f).test(h))?a.json():this.config.textMimeTypes.find(f=>new RegExp(f).test(h))?await a.text():(d=this.config.progressHandlers)!=null&&d.find(f=>!!f.download)?(this.factoryMethods.requireFeature("download-progress"),this.featureDelegates.handleDownloadProgress({response:a,abortController:this._abortController,config:this.getReadOnlyConfig()})):await a.blob():(this.getLogger().info("No content-type header found for response"),null)},this.configBuilders=r,this.wasUsed=!1,this.config=this.createConfigObject(e,t),this.featureDelegates=s,this.factory=o,this.factoryMethods=i,this.wrapErrors=n}get abortController(){return this._abortController}createConfigObject(e,t){const r={templateURLHistory:[e],headers:{},body:null,timeout:0,ignoreResponseBody:!1,method:t,jsonMimeTypes:[...m],textMimeTypes:[...R],credentials:"same-origin",logLevel:"error",corsMode:"cors",meta:{},queryParams:{},expectedResponseFormat:"auto",acceptedMIMETypes:["*/*"],urlParams:{},errorInterceptors:[],responseInterceptors:[],requestInterceptors:[],responseBodyTransformers:[],progressHandlers:[]};return Object.defineProperty(r,"templateURL",{get:()=>r.templateURLHistory[r.templateURLHistory.length-1],configurable:!1,enumerable:!0}),r}isFinalized(){return typeof this.finalizedURL=="string"}throwIfFinalized(){if(this.isFinalized())throw new Error("The request has already been finalised. Request modification is not allowed.")}getLogger(){return this.logger.withMinimumLevel(this.config.logLevel)}setupHeaders(){const e=this.config.headers;for(let t in e)e[t]=l(e[t],this),e[t]??delete e[t];this.fetchBody.headers=e}setupTimeout(){this.config.timeout&&(this.timeoutID=setTimeout(()=>{this.getLogger().debug("HttpRequestFactory : Fetch timeout",`Request timeout after ${this.config.timeout/1e3} seconds`),this._abortController.abort()},this.config.timeout)),this.getLogger().debug("HttpRequestFactory : Fetch invoked",this.fetchBody)}registerAbortListeners(){this._abortController.signal.addEventListener("abort",e=>{for(const t of this.abortListeners)t(e)})}setupBody(){this.config.body&&(["GET","HEAD","DELETE","TRACE"].includes(this.config.method)&&this.getLogger().warn("HTTPRequest.replaceBody","HEAD, DELETE, GET or TRACE requests do not have a body"),this.fetchBody.body=this.config.body())}composeURL(){return q({templateURLHistory:this.config.templateURLHistory,urlParams:this.config.urlParams,queryParams:this.config.queryParams,config:this.config})}async execute(){var r;if(this.wasUsed)throw new Error("HttpRequests cannot be reused. Please call a request factory method for every new call");const e=this.getLogger();this.configBuilders.forEach(s=>{s(this,this.getReadOnlyConfig())}),this.fetchBody={method:this.config.method,mode:this.config.corsMode,credentials:this.config.credentials},this.fetchBody.signal=this._abortController.signal;let t;try{this.setupHeaders(),this.setupTimeout(),this.wasUsed=!0;const s=this.createRequestInterceptorControls();for(const o of this.config.requestInterceptors||[]){let n=!1,a=await o({config:this.getReadOnlyConfig(),controls:{...s,skipBodyTransformers:()=>{n=!0}},factory:this.factory});if(a!==void 0)return n||(a=await w(a,this.getReadOnlyConfig())),this.wrapErrors?{response:a}:a}this.setupBody(),this.finalizedURL=this.composeURL(),e.debug("HttpRequestFactory : Fetch url to be called",this.finalizedURL),(r=this.config.progressHandlers)!=null&&r.find(o=>!!o.upload)&&this.factoryMethods.requireFeature("upload-progress");for(const o of this.beforeFetchHooks)await o(this.fetchBody,this.config);const i=this.getFinalFetchImpl();if(this.registerAbortListeners(),t=await i(this.finalizedURL,this.fetchBody),e.trace("HttpRequestFactory : Fetch response",t),this.config.responseInterceptors.length){const o=this.createResponseControls();for(const n of this.config.responseInterceptors){let a=!1,h=await n({response:t,config:this.getReadOnlyConfig(),controls:{...o,skipBodyTransformers:()=>{a=!0}},factory:this.factory});if(h!==void 0)return a||(h=await w(h,this.getReadOnlyConfig())),this.wrapErrors?{response:h}:h}}if(t.ok){if(this.config.ignoreResponseBody||t.status===204)return this.wrapErrors?{response:void 0}:void 0;let o=await this.readResponse(t);return o=await w(o,this.getReadOnlyConfig()),this.wrapErrors?{response:o}:o}else{const o=new g(t.status,t.statusText,await this.readResponse(t));for(const n of this.config.errorInterceptors||[])if(await n(o))break;return this.wrapErrors?{error:o}:Promise.reject(o)}}catch(s){if(s.name==="AbortError"){const o=new g(-1,"Request aborted");for(const n of this.config.errorInterceptors||[])if(await n(o))break;return this.wrapErrors?{error:o}:Promise.reject(o)}e.error("HttpRequestFactory : Fetch error",{type:"fetch-error",endpoint:this.composeURL(),details:s});const i=new g(-1,s.message||"Network error",s);for(const o of this.config.errorInterceptors||[])if(await o(i))break;return this.wrapErrors?{error:i}:Promise.reject(i)}finally{clearTimeout(this.timeoutID)}}getReadOnlyConfig(){if(this.readOnlyConfig)return this.readOnlyConfig;const e=this.config,t=new Proxy(e,{get:(r,s)=>{if(s==="finalURL"){if(!this.isFinalized()){this.getLogger().warn("HttpRequestFactory : Access to finalURL before URL finalisation",{type:"final-url-access-before-finalise"});return}return this.finalizedURL}if(s==="templateURL")return r.templateURLHistory[r.templateURLHistory.length-1];if(s==="body")try{return l(r.body,t)}catch(i){return this.getLogger().warn("HttpRequestFactory : Error evaluating body",{type:"body-error",endpoint:e.templateURL,details:i}),null}if(s==="headers"){const i=r.headers||{};return new Proxy(i,{get:(o,n)=>{const a=o[n];try{return l(a,t)}catch(h){this.getLogger().warn("HttpRequestFactory : Error evaluating header",{type:"header-error",key:String(n),endpoint:e.templateURL,details:h});return}},ownKeys:o=>Object.keys(o),getOwnPropertyDescriptor:(o,n)=>{if(Object.prototype.hasOwnProperty.call(o,n)){let a;try{a=l(o[n],t)}catch(h){this.getLogger().warn("HttpRequestFactory : Error evaluating header",{type:"header-error",key:String(n),endpoint:e.templateURL,details:h}),a=void 0}return{enumerable:!0,configurable:!1,writable:!1,value:a}}},set:()=>!1,deleteProperty:()=>!1})}return r[s]},set:()=>!1,deleteProperty:()=>!1});return this.readOnlyConfig=t,this.readOnlyConfig}createRequestInterceptorControls(){return{abort:()=>{this.timeoutID&&clearTimeout(this.timeoutID),this._abortController.abort()},replaceURL:e=>{this.throwIfFinalized(),e&&this.config.templateURLHistory.push(e)},replaceURLParams:e=>{this.throwIfFinalized(),e&&(this.config.urlParams=e)},getProvisionalURL:()=>this.composeURL(),updateHeaders:e=>{this.throwIfFinalized(),Object.assign(this.config.headers,e),this.setupHeaders()},finaliseURL:()=>(this.isFinalized()||(this.finalizedURL=this.composeURL()),this.finalizedURL),replaceBody:e=>{this.throwIfFinalized();const t=this.config.body();this.config.body=()=>e(t)},getHash:e=>(this.factoryMethods.requireFeature("request-hash"),this.getHash(e)),getLogger:()=>this.getLogger(),skipBodyTransformers:()=>null}}createResponseControls(){return{getLogger:()=>this.getLogger(),getHash:e=>this.getHash(e)}}withMeta(e,t){return this.throwIfFinalized(),typeof e=="string"?this.config.meta[e]=t:typeof e=="object"&&Object.assign(this.config.meta,e),this}withLogger(e){return this.throwIfFinalized(),this.logger=e,this}withCredentialsPolicy(e){return this.throwIfFinalized(),this.config.credentials=e,this}blank(){return this.throwIfFinalized(),this.configBuilders.splice(0,this.configBuilders.length),this}withAbortListener(e){return this.abortListeners.push(e),this}withAccept(...e){return this.throwIfFinalized(),this.config.acceptedMIMETypes=e,this}withURLParam(e,t){return this.throwIfFinalized(),this.config.urlParams[e]=t,this}withURLParams(e){return this.throwIfFinalized(),Object.assign(this.config.urlParams,e),this}withFormEncodedBody(e){return this.throwIfFinalized(),this.withHeader("content-type","application/x-www-form-urlencoded"),this.config.body=()=>e,this}withErrorInterceptors(...e){return this.throwIfFinalized(),this.config.errorInterceptors.push(...e),this}withRequestInterceptors(...e){return this.throwIfFinalized(),this.config.requestInterceptors.push(...e),this}withJSONBody(e){return this.throwIfFinalized(),this.withHeader("content-type","application/json"),this.config.body=()=>{switch(typeof e){case"string":try{return JSON.parse(e),e}catch{}break;case"object":return JSON.stringify(e)}this.getLogger().error("POSTHttpRequest.withJSONBody","Passed body is not a valid JSON string",e)},this}withFormDataBody(e=()=>{throw new Error("No composer callback provided")}){return this.throwIfFinalized(),this.config.body=()=>{const t=new FormData;return e(t),t},this}withAcceptAny(){return this.throwIfFinalized(),this.config.acceptedMIMETypes=["*/*"],this}ignoreResponseBody(){return this.throwIfFinalized(),this.config.ignoreResponseBody=!0,this}withQueryParams(e){return this.throwIfFinalized(),Object.assign(this.config.queryParams,e),this}withQueryParam(e,t){return this.throwIfFinalized(),this.config.queryParams[e]=t,this}withNoCors(){return this.throwIfFinalized(),this.config.corsMode="no-cors",this}withJSONMimeTypes(...e){return this.throwIfFinalized(),this.config.jsonMimeTypes=[...this.config.jsonMimeTypes,...e],this}withTextMimeTypes(...e){return this.throwIfFinalized(),this.config.textMimeTypes=[...this.config.textMimeTypes,...e],this}withLogLevel(e){return this.throwIfFinalized(),this.config.logLevel=e,this}withHeaders(e){if(this.throwIfFinalized(),typeof e=="object"){const t=Object.fromEntries(Object.entries(e).map(([r,s])=>[r.toLowerCase(),s]));Object.assign(this.config.headers,t)}return this}withHeader(e,t){return this.throwIfFinalized(),this.config.headers[e.toLowerCase()]=t,this}withResponseBodyTransformers(...e){return this.throwIfFinalized(),this.config.responseBodyTransformers.push(...e),this}withTimeout(e){return this.throwIfFinalized(),this.config.timeout=e,this}withRetry(e){return this.config.retry=e,this}getSortedFeaturesWithFetchImpl(){return Array.from(this.factoryMethods.getEnabledFeatures().values()).filter(e=>{var t,r,s;return(s=(r=(t=e.getDelegates)==null?void 0:t.call(e,this.factory))==null?void 0:r.request)==null?void 0:s.getFetchImpl}).sort((e,t)=>(e.priority??50)-(t.priority??50))}getFinalFetchImpl(){return this.getSortedFeaturesWithFetchImpl().reduce((t,r)=>{var o,n;const s=(o=r.getDelegates)==null?void 0:o.call(r,this.factory),i=(n=s==null?void 0:s.request)==null?void 0:n.getFetchImpl;return i?i(this.config,t):t},globalThis.fetch)}withResponseInterceptors(...e){return this.config.responseInterceptors.push(...e),this}getHash(e){return this.factoryMethods.requireFeature("request-hash"),this.featureDelegates.getHash(this,e)}withProgressHandlers(...e){return e.some(t=>t.download)&&this.factoryMethods.requireFeature("download-progress"),e.some(t=>t.upload)&&this.factoryMethods.requireFeature("upload-progress"),this.config.progressHandlers.push(...e),this}withBeforeFetchHook(e){return this.beforeFetchHooks.push(e),this}}class L{constructor(){this.requestDefaults=[],this.sseRequestDefaults=[],this.apiConfigs={},this._logger=new y,this._logLevel="error",this.afterRequestCreatedHooks=[],this.enabledFeatures=new Map,this.interceptorsToRequestDefaults=new Map,this.interceptorsToResponseDefaults=new Map,this.requestDelegates={},this.factoryDelegates={},this.wrapErrors=!1}get logger(){return this._logger}get logLevel(){return this._logLevel}use(...e){return e.forEach(t=>{var r;if(this.enabledFeatures.has(t.name))return this._logger.info(`Feature "${t.name}" already enabled`),this;if(this.enabledFeatures.set(t.name,t),(r=t.apply)==null||r.call(t,this,{addRequestDefaults:(...s)=>{this.requestDefaults.push(...s)},removeRequestDefaults:(...s)=>{this.requestDefaults=this.requestDefaults.filter(i=>!s.includes(i))},afterRequestCreated:s=>{this.afterRequestCreatedHooks.push(s)},beforeFetch:s=>{this.requestDefaults.push(i=>i.withBeforeFetchHook(s))}}),t.getDelegates){const s=t.getDelegates(this);s.request&&Object.assign(this.requestDelegates,s.request),s.factory&&Object.assign(this.factoryDelegates,s.factory)}}),this}requireFeature(e){if(!this.enabledFeatures.has(e))throw new Error(`Feature "${e}" not enabled. Call factory.use(featureObj).`)}withWrappedResponseError(){return this.wrapErrors=!0,this}withLogger(e){return this._logger=e,this.requestDefaults.push(t=>t.withLogger(e)),this.sseRequestDefaults.push(t=>t.withLogger(e)),this}withLogLevel(e){return this._logLevel=e,this.requestDefaults.push(t=>t.withLogLevel(e)),this.sseRequestDefaults.push(t=>t.withLogLevel(e)),this}withAccept(...e){return this.requestDefaults.push(t=>t.withAccept(...e)),this}withQueryParams(e){return this.requestDefaults.push(t=>t.withQueryParams(e)),this.sseRequestDefaults.push(t=>t.withQueryParams(e)),this}withQueryParam(e,t){return this.requestDefaults.push(r=>r.withQueryParam(e,t)),this.sseRequestDefaults.push(r=>r.withQueryParam(e,t)),this}withURLParams(e){return this.requestDefaults.push(t=>t.withURLParams(e)),this.sseRequestDefaults.push(t=>t.withURLParams(e)),this}withURLParam(e,t){return this.requestDefaults.push(r=>r.withURLParam(e,t)),this.sseRequestDefaults.push(r=>r.withURLParam(e,t)),this}withHeader(e,t){return this.requestDefaults.push(r=>r.withHeader(e,t)),this}withHeaders(e){if(typeof e=="object")for(const t of Object.keys(e))this.requestDefaults.push(r=>r.withHeader(t,e[t]));return this}withCredentialsPolicy(e){return this.requestDefaults.push(t=>t.withCredentialsPolicy(e)),this}withBaseURL(e){return this.baseURL=e,this}withRetry(e){return this.requestDefaults.push(t=>t.withRetry(e)),this}withRequestInterceptors(...e){for(const t of e){const r=function(s){s.withRequestInterceptors(t)};this.requestDefaults.push(r),this.interceptorsToRequestDefaults.set(t,r)}return this}withResponseInterceptors(...e){for(const t of e){const r=function(s){s.withResponseInterceptors(t)};this.requestDefaults.push(r),this.interceptorsToResponseDefaults.set(t,r)}return this}withErrorInterceptors(...e){return this.requestDefaults.push(t=>{t.withErrorInterceptors(...e)}),this.sseRequestDefaults.push(t=>{t.withErrorInterceptors(...e)}),this}withResponseBodyTransformers(...e){return this.requestDefaults.push(...e.map(t=>r=>r.withResponseBodyTransformers(t))),this}withJSONMimeTypes(...e){return this.requestDefaults.push(t=>{t.withJSONMimeTypes(...e)}),this}withTextMimeTypes(...e){return this.requestDefaults.push(t=>{t.withTextMimeTypes(...e)}),this}withProgressHandlers(...e){return e.some(t=>t.download)&&!this.requestDelegates.handleDownloadProgress&&this.requireFeature("download-progress"),e.some(t=>t.upload)&&!this.requestDelegates.handleUploadProgress&&this.requireFeature("upload-progress"),this.requestDefaults.push(t=>t.withProgressHandlers(...e)),this}withAbortListener(e){return this.requestDefaults.push(t=>{t.withAbortListener(e)}),this}always(){return this}when(e){return new Proxy(this,{get:(r,s)=>s==="always"?()=>r:s==="when"?i=>r.when(i):typeof r[s]=="function"&&s.toString().startsWith("with")?(...i)=>{const o=(n,a)=>{e(a)&&n[s](...i)};return this.requestDefaults.push(o),this}:r[s]})}deleteRequestInterceptor(e){const t=this.interceptorsToRequestDefaults.get(e);this.requestDefaults.splice(this.requestDefaults.indexOf(t),1)}deleteResponseInterceptor(e){const t=this.interceptorsToResponseDefaults.get(e);this.requestDefaults.splice(this.requestDefaults.indexOf(t),1)}createRequest(e,t="GET"){e=this.computeURL(e);const r=this.requestDelegates,s=new b({url:e,method:t,defaultConfigBuilders:this.requestDefaults,featureDelegates:r,factory:this,factoryMethods:{requireFeature:this.requireFeature.bind(this),getEnabledFeatures:()=>this.enabledFeatures},wrapErrors:this.wrapErrors});return this.afterRequestCreatedHooks.forEach(i=>i(s)),s}createGETRequest(e){return this.createRequest(e,"GET")}createPOSTRequest(e){return this.createRequest(e,"POST")}createPUTRequest(e){return this.createRequest(e,"PUT")}createDELETERequest(e){return this.createRequest(e,"DELETE")}createPATCHRequest(e){return this.createRequest(e,"PATCH")}createHEADRequest(e){return this.createRequest(e,"HEAD")}createTRACERequest(e){return this.createRequest(e,"TRACE")}createSSERequest(e){this.requireFeature("sse-request");const t=this.computeURL(e);return this.factoryDelegates.createSSERequest(t,{defaultConfigBuilders:this.sseRequestDefaults,wrapErrors:this.wrapErrors})}withAPIConfig(...e){return e.forEach(t=>{this.apiConfigs[t.name]=t}),this}computeAPIRequestCommons(...e){const[t,r]=e.length===1?["default",e[0]]:e;this._logger.withMinimumLevel(this._logLevel).trace("Creating API request",t,r);const s=this.apiConfigs[t],i=s==null?void 0:s.endpoints[r];if(!i)throw new Error(`Endpoint ${r} not found in API ${t}`);const o=this.getEndpointURL(i,s),n=this.constructMeta(s,r,i);return{url:o,meta:n,api:s,endpoint:i}}createSSEAPIRequest(...e){this.requireFeature("sse-request");const{url:t,meta:r,api:s}=this.computeAPIRequestCommons(...e),i=this.createSSERequest(t).withMeta(r);return this.applyAPIDefaultsToRequest(s,i),i}createAPIRequest(...e){const{url:t,meta:r,api:s,endpoint:i}=this.computeAPIRequestCommons(...e),o=this.createRequest(t,i.method||"GET").withMeta(r).withHeaders(s.headers||{});return this.applyAPIDefaultsToRequest(s,o),o}withAdapter(e,t){this.requireFeature("adapters");for(const r of e.require||[])this.requireFeature(r);return this.factoryDelegates.withAdapter(e,t)}withSSEListeners(...e){return this.requireFeature("sse-request"),this.sseRequestDefaults.push(t=>t.withSSEListeners(...e)),this}async detachAdapter(e){return this.requireFeature("adapters"),this.factoryDelegates.detachAdapter(e)}getAttachedAdapters(){return this.requireFeature("adapters"),this.factoryDelegates.getAttachedAdapters()}hasAdapter(e){return this.requireFeature("adapters"),this.factoryDelegates.hasAdapter(e)}applyAPIDefaultsToRequest(e,t){const r=["responseBodyTransformers","requestInterceptors","responseInterceptors","errorInterceptors","progressHandlers","SSEListeners","retry"];for(const s of r){const i=e[s];if(!i)continue;const o=Array.isArray(i)?i:[i],n="with"+s.charAt(0).toUpperCase()+s.slice(1);t[n]&&t[n](...o)}}computeURL(e){const t=o=>/^(https?:)?\/\//.test(o);if(t(e)||!this.baseURL)return e;const r=this.baseURL;if(t(r))return new URL(e,r).toString();const s=r.replace(/\/+$/,""),i=e.replace(/^\/+/,"");return`${s}/${i}`}constructMeta(e,t,r){const s={api:{name:e.name,baseURL:e.baseURL,apiMeta:e.meta||{},endpoint:r,endpointName:t}};Object.defineProperty(s,"api",{writable:!1,configurable:!1,enumerable:!0});try{Object.assign(s,e.meta||{},r.meta||{})}catch(i){const o=[];("api"in(e.meta||{})||"api"in(r.meta||{}))&&o.push("You're trying to assign the reserved `api` property name to meta"),this._logger.error("Unable to merge meta",...o,i)}return s}getEndpointURL(e,t){if(/^(https?:)?\/\//.test(e.target)||!t.baseURL)return e.target;const r=t.baseURL.replace(/\/+$/,""),s=e.target.replace(/^\/+/,"");return`${r}/${s}`}}export{y as C,L as H,g as a,w as b,q as c,l as m};
