import{_ as k}from"./chunks/apihive-demo-button.CEICW5H5.js";import{_ as o,C as e,c as d,o as h,a3 as a,b as r,j as s,w as l,a as E,G as t,a4 as c}from"./chunks/framework.DJIHrpKd.js";const v=JSON.parse('{"title":"Conditional Building","description":"","frontmatter":{},"headers":[],"relativePath":"guide/conditional-building.md","filePath":"guide/conditional-building.md"}'),y={name:"guide/conditional-building.md"},g={class:"vp-code-group vp-adaptive-theme"},u={class:"tabs"},A={"data-title":'<v-icon name="io-checkmark" />',for:"tab-cd9soFK"},F={"data-title":'<v-icon name="io-close" />',for:"tab-m2WbWDb"};function C(f,i,B,b,m,w){const p=e("Mermaid"),n=e("v-icon");return h(),d("div",null,[i[4]||(i[4]=a(`<h1 id="conditional-building" tabindex="-1">Conditional Building <a class="header-anchor" href="#conditional-building" aria-label="Permalink to &quot;Conditional Building&quot;">​</a></h1><p>APIHive allows you to conditionally build requests. This is useful when you want to build requests based on runtime conditions.</p><p>There are two ways to conditionally build requests:</p><ol><li>Using the factory build chain with <code>.when()</code></li><li>Just in time configuration with <code>.withHeaders()</code>, <code>.withQueryParams()</code>, etc.</li></ol><p>What method you&#39;ll use depends on your use case. The factory build chain is useful when you want to conditionally apply settings to all the requests built by the factory. Dynamic request builders are useful when you want to conditionally apply settings to a single request or the requests defined in an API config.</p><p>This page is about the factory build chain method.</p><div class="tip custom-block"><p class="custom-block-title">More Info</p><p>See the <a href="./../guide/just-in-time-configuration.html">here</a> for more information on just in time configuration.</p></div><h2 id="using-the-factory-build-chain" tabindex="-1">Using the factory build chain <a class="header-anchor" href="#using-the-factory-build-chain" aria-label="Permalink to &quot;Using the factory build chain&quot;">​</a></h2><p><code>.when()</code> and <code>.always()</code> can be used on the factory build chain as delimiters to declare conditional defaults.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTTPRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withBaseURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isProduction)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bearer 123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">always</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;User-Agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyApp/1.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>The condition is checked when the request is built. <code>.when()</code> receives a read-only copy of the current request configuration. That can be used to conditionally apply settings.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTTPRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withBaseURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config.templateURL.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/admin/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bearer: 123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> posts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> factory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createGETRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No Authorization header</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> adminPosts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> factory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createGETRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/admin/posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Authorization header will be set</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p><a href="../demos/captcha-requests/"><img src="`+k+'" alt="Demo" class="demo-button"></a></p><p>See <a href="../demos/captcha-requests/index.md">here</a> for a live demo of captcha injection using conditional factory build chain.</p></div><h2 id="conditional-factory-build-chain-flow" tabindex="-1">Conditional factory build chain flow <a class="header-anchor" href="#conditional-factory-build-chain-flow" aria-label="Permalink to &quot;Conditional factory build chain flow&quot;">​</a></h2><p>The diagram below shows how <code>.when()</code> gates conditional defaults, how <code>.always()</code> resets the conditional scope, and how the chain is evaluated when a request is created.</p>',15)),(h(),r(c,null,{default:l(()=>[t(p,{id:"mermaid-55",class:"mermaid",graph:"%0Aflowchart%20TD%0A%20%20%25%25%20Styles%0A%20%20classDef%20cond%20fill%3A%23eef%2Cstroke%3A%2388f%2Cstroke-width%3A1px%2Ccolor%3A%23000%0A%20%20classDef%20uncond%20fill%3A%23efe%2Cstroke%3A%235a5%2Cstroke-width%3A1px%2Ccolor%3A%23000%0A%20%20classDef%20action%20fill%3A%23ffd%2Cstroke%3A%23cc8%2Cstroke-width%3A1px%2Ccolor%3A%23000%0A%20%20classDef%20io%20fill%3A%23fef%2Cstroke%3A%23c8c%2Cstroke-width%3A1px%2Ccolor%3A%23000%0A%0A%20%20A%5BStart%20Factory%20Chain%5D%3A%3A%3Aio%20--%3E%20B%5BwithBaseURL%2C%20withHeader%2C%20etc%5D%3A%3A%3Auncond%0A%0A%20%20%25%25%20First%20conditional%20block%0A%20%20B%20--%3E%20C%5B%22when(predicate_A)%22%5D%3A%3A%3Acond%0A%20%20C%20--%3E%7Ctrue%20at%20build-time%7C%20D%5B%22Apply%20conditional%20defaults%20A%3Cbr%2F%3Ee.g.%20headers%3B%20interceptors%3B%20query%20params%22%5D%3A%3A%3Aaction%0A%20%20C%20--%3E%7Cfalse%20at%20build-time%7C%20E%5B%22Skip%20conditional%20defaults%20A%22%5D%3A%3A%3Aaction%0A%20%20D%20--%3E%20F%5B%22always()%22%5D%3A%3A%3Auncond%0A%20%20E%20--%3E%20F%0A%0A%20%20%25%25%20Unconditional%20after%20reset%0A%20%20F%20--%3E%20G%5B%22Apply%20unconditional%20defaults%3Cbr%2F%3Ee.g.%20global%20headers%3B%20logging%22%5D%3A%3A%3Auncond%0A%0A%20%20%25%25%20Optional%3A%20another%20conditional%20block%0A%20%20G%20--%3E%20H%5B%22when(predicate_B)%22%5D%3A%3A%3Acond%0A%20%20H%20--%3E%7Ctrue%20at%20build-time%7C%20I%5B%22Apply%20conditional%20defaults%20B%22%5D%3A%3A%3Aaction%0A%20%20H%20--%3E%7Cfalse%20at%20build-time%7C%20J%5B%22Skip%20conditional%20defaults%20B%22%5D%3A%3A%3Aaction%0A%20%20I%20--%3E%20K%5B%22always()%22%5D%3A%3A%3Auncond%0A%20%20J%20--%3E%20K%0A%20%20K%20--%3E%20L%5BApply%20unconditional%20defaults%5D%3A%3A%3Auncond%0A%0A%20%20%25%25%20Request%20creation%20and%20build-time%20evaluation%0A%20%20L%20--%3E%20M%5B%22createXXXRequest%20url%22%5D%3A%3A%3Aio%0A%20%20M%20--%3E%20N%5B%22Build-time%20evaluation%20runs%20chain%20in-order%3A%3Cbr%2F%3E1)%20unconditional%20defaults%3Cbr%2F%3E2)%20conditional%20blocks%20if%20predicate%20true%3Cbr%2F%3E3)%20always()%20resets%20condition%3Cbr%2F%3E4)%20next%20unconditional%20defaults%22%5D%3A%3A%3Aaction%0A%20%20N%20--%3E%20O%5B%22Resulting%20Request%20Config%3Cbr%2F%3EURL%3B%20headers%3B%20body%3B%20params%3B%20interceptors%22%5D%3A%3A%3Aio%0A%20%20O%20--%3E%20P%5B%22execute%22%5D%3A%3A%3Aio%0A%0A%20%20%25%25%20Notes%0A%20%20Q%5B%22Note%3A%20always%20ends%20the%20current%20conditional%20scope%3Cbr%2F%3Ewhen%20storing%20the%20factory%20instance%2C%20so%20subsequent%20defaults%20calls%20are%20unconditional%22%5D%3A%3A%3Aio%0A%20%20F%20-.%20resets%20.-%3E%20Q%0A%20%20K%20-.%20resets%20.-%3E%20Q%0A%0A"})]),fallback:l(()=>[...i[0]||(i[0]=[E(" Loading... ",-1)])]),_:1})),i[5]||(i[5]=a('<h2 id="a-word-of-caution" tabindex="-1">A word of caution <a class="header-anchor" href="#a-word-of-caution" aria-label="Permalink to &quot;A word of caution&quot;">​</a></h2><p>It&#39;s important to understand that the <code>.when()</code> method returns a proxy to the factory that is used to apply conditional defaults. So it&#39;s important to call <code>.always()</code> to reset the conditional scope when storing a factory instance.</p><p>Furthermore, <code>.when()</code> only affects the factory configuration methods (typically the ones that start with <code>with</code>). It does not affect the the request creation calls (e.g. <code>createGETRequest</code>, <code>createPOSTRequest</code>, etc).</p>',3)),s("div",g,[s("div",u,[i[1]||(i[1]=s("input",{type:"radio",name:"group-nnJoo",id:"tab-cd9soFK",checked:""},null,-1)),s("label",A,[t(n,{name:"io-checkmark"})]),i[2]||(i[2]=s("input",{type:"radio",name:"group-nnJoo",id:"tab-m2WbWDb"},null,-1)),s("label",F,[t(n,{name:"io-close"})])]),i[3]||(i[3]=a(`<div class="blocks"><div class="language-typescript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTTPRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withBaseURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isProduction)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bearer 123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">always</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  factory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;User-Agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyApp/1.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//✅</span></span></code></pre></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTTPRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withBaseURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isProduction)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Bearer 123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">factory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;User-Agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyApp/1.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//⚠️</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * DANGER: \`factory\` is now a proxy to the factory </span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * that is used to apply conditional defaults. </span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * Any further customisation of the factory will be </span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * applied conditionally.</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span></code></pre></div></div>`,1))])])}const T=o(y,[["render",C]]);export{v as __pageData,T as default};
