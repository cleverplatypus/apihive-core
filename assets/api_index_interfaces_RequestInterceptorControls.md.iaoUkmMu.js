import{_ as a,c as r,o as t,a3 as o}from"./chunks/framework.DJIHrpKd.js";const u=JSON.parse('{"title":"Interface: RequestInterceptorControls","description":"","frontmatter":{},"headers":[],"relativePath":"api/index/interfaces/RequestInterceptorControls.md","filePath":"api/index/interfaces/RequestInterceptorControls.md"}'),s={name:"api/index/interfaces/RequestInterceptorControls.md"};function n(l,e,i,c,d,h){return t(),r("div",null,[...e[0]||(e[0]=[o('<p><a href="./../../README.html"><strong>@apihive/core</strong></a></p><hr><p><a href="./../../modules.html">@apihive/core</a> / <a href="./../README.html">index</a> / RequestInterceptorControls</p><h1 id="interface-requestinterceptorcontrols" tabindex="-1">Interface: RequestInterceptorControls <a class="header-anchor" href="#interface-requestinterceptorcontrols" aria-label="Permalink to &quot;Interface: RequestInterceptorControls&quot;">​</a></h1><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L117" target="_blank" rel="noreferrer">types.ts:117</a></p><p>Control APIs available to interceptors for manipulating the request during execution.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="abort" tabindex="-1">abort() <a class="header-anchor" href="#abort" aria-label="Permalink to &quot;abort()&quot;">​</a></h3><blockquote><p><strong>abort</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L121" target="_blank" rel="noreferrer">types.ts:121</a></p><p>Abort the current request</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="finaliseurl" tabindex="-1">finaliseURL() <a class="header-anchor" href="#finaliseurl" aria-label="Permalink to &quot;finaliseURL()&quot;">​</a></h3><blockquote><p><strong>finaliseURL</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L138" target="_blank" rel="noreferrer">types.ts:138</a></p><p>Finalise the request URL. After this call, the URL becomes immutable and further calls to replaceURL() will throw. Returns the composed final URL.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><hr><h3 id="gethash" tabindex="-1">getHash() <a class="header-anchor" href="#gethash" aria-label="Permalink to &quot;getHash()&quot;">​</a></h3><blockquote><p><strong>getHash</strong>(<code>options?</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L163" target="_blank" rel="noreferrer">types.ts:163</a></p><p>Returns a hash string that can be used to uniquely identify the request.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><a href="./../type-aliases/RequestHashOptions.html"><code>RequestHashOptions</code></a></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h4><p>This is an optional feature (request-hash) that must be enabled on the factory.</p><hr><h3 id="getlogger" tabindex="-1">getLogger() <a class="header-anchor" href="#getlogger" aria-label="Permalink to &quot;getLogger()&quot;">​</a></h3><blockquote><p><strong>getLogger</strong>(): <code>LoggerFacade</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L168" target="_blank" rel="noreferrer">types.ts:168</a></p><p>Returns the logger used by the factory</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>LoggerFacade</code></p><hr><h3 id="getprovisionalurl" tabindex="-1">getProvisionalURL() <a class="header-anchor" href="#getprovisionalurl" aria-label="Permalink to &quot;getProvisionalURL()&quot;">​</a></h3><blockquote><p><strong>getProvisionalURL</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L148" target="_blank" rel="noreferrer">types.ts:148</a></p><p>Get the provisional URL before finalisation</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><hr><h3 id="replacebody" tabindex="-1">replaceBody() <a class="header-anchor" href="#replacebody" aria-label="Permalink to &quot;replaceBody()&quot;">​</a></h3><blockquote><p><strong>replaceBody</strong>(<code>replacer</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L156" target="_blank" rel="noreferrer">types.ts:156</a></p><p>Sets a last-minute body replacer</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="replacer" tabindex="-1">replacer <a class="header-anchor" href="#replacer" aria-label="Permalink to &quot;replacer&quot;">​</a></h5><p>(<code>body</code>) =&gt; <code>any</code></p><p>The function to be called with the current body as argument and returning the new body</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="remarks-1" tabindex="-1">Remarks <a class="header-anchor" href="#remarks-1" aria-label="Permalink to &quot;Remarks&quot;">​</a></h4><p>When a request has a JSON body, the received body is always a string.<br>This means the body would generally need parsing.</p><hr><h3 id="replaceurl" tabindex="-1">replaceURL() <a class="header-anchor" href="#replaceurl" aria-label="Permalink to &quot;replaceURL()&quot;">​</a></h3><blockquote><p><strong>replaceURL</strong>(<code>newURL</code>, <code>newURLParams?</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L126" target="_blank" rel="noreferrer">types.ts:126</a></p><p>Replace the request URL</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="newurl" tabindex="-1">newURL <a class="header-anchor" href="#newurl" aria-label="Permalink to &quot;newURL&quot;">​</a></h5><p><code>string</code></p><h5 id="newurlparams" tabindex="-1">newURLParams? <a class="header-anchor" href="#newurlparams" aria-label="Permalink to &quot;newURLParams?&quot;">​</a></h5><p><a href="./../type-aliases/URLParams.html"><code>URLParams</code></a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="replaceurlparams" tabindex="-1">replaceURLParams() <a class="header-anchor" href="#replaceurlparams" aria-label="Permalink to &quot;replaceURLParams()&quot;">​</a></h3><blockquote><p><strong>replaceURLParams</strong>(<code>newURLParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L143" target="_blank" rel="noreferrer">types.ts:143</a></p><p>Replace the request URL params</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="newurlparams-1" tabindex="-1">newURLParams <a class="header-anchor" href="#newurlparams-1" aria-label="Permalink to &quot;newURLParams&quot;">​</a></h5><p><a href="./../type-aliases/URLParams.html"><code>URLParams</code></a></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="skipbodytransformers" tabindex="-1">skipBodyTransformers() <a class="header-anchor" href="#skipbodytransformers" aria-label="Permalink to &quot;skipBodyTransformers()&quot;">​</a></h3><blockquote><p><strong>skipBodyTransformers</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L173" target="_blank" rel="noreferrer">types.ts:173</a></p><p>Skip body transformers for the response</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="updateheaders" tabindex="-1">updateHeaders() <a class="header-anchor" href="#updateheaders" aria-label="Permalink to &quot;updateHeaders()&quot;">​</a></h3><blockquote><p><strong>updateHeaders</strong>(<code>headers</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L131" target="_blank" rel="noreferrer">types.ts:131</a></p><p>Update request headers (merges with existing headers)</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="headers" tabindex="-1">headers <a class="header-anchor" href="#headers" aria-label="Permalink to &quot;headers&quot;">​</a></h5><p><code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',98)])])}const b=a(s,[["render",n]]);export{u as __pageData,b as default};
