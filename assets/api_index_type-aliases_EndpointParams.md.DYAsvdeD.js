import{_ as e,c as s,o as i,a3 as t}from"./chunks/framework.DJIHrpKd.js";const k=JSON.parse('{"title":"Type Alias: EndpointParams","description":"","frontmatter":{},"headers":[],"relativePath":"api/index/type-aliases/EndpointParams.md","filePath":"api/index/type-aliases/EndpointParams.md"}'),r={name:"api/index/type-aliases/EndpointParams.md"};function n(p,a,o,l,h,d){return i(),s("div",null,[...a[0]||(a[0]=[t(`<p><a href="./../../README.html"><strong>@apihive/core</strong></a></p><hr><p><a href="./../../modules.html">@apihive/core</a> / <a href="./../README.html">index</a> / EndpointParams</p><h1 id="type-alias-endpointparams" tabindex="-1">Type Alias: EndpointParams <a class="header-anchor" href="#type-alias-endpointparams" aria-label="Permalink to &quot;Type Alias: EndpointParams&quot;">​</a></h1><blockquote><p><strong>EndpointParams</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L352" target="_blank" rel="noreferrer">types.ts:352</a></p><p>Parameter object structure for endpoint functions.</p><p>This type provides IntelliSense suggestions for standard endpoint parameters while remaining flexible enough to allow specific parameter shapes.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Standard </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pathParams</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bodyParams</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="indexable" tabindex="-1">Indexable <a class="header-anchor" href="#indexable" aria-label="Permalink to &quot;Indexable&quot;">​</a></h2><p>[<code>key</code>: <code>string</code>]: <code>any</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="bodyparams" tabindex="-1">bodyParams? <a class="header-anchor" href="#bodyparams" aria-label="Permalink to &quot;bodyParams?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>bodyParams</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L354" target="_blank" rel="noreferrer">types.ts:354</a></p><hr><h3 id="pathparams" tabindex="-1">pathParams? <a class="header-anchor" href="#pathparams" aria-label="Permalink to &quot;pathParams?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>pathParams</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L353" target="_blank" rel="noreferrer">types.ts:353</a></p><hr><h3 id="queryparams" tabindex="-1">queryParams? <a class="header-anchor" href="#queryparams" aria-label="Permalink to &quot;queryParams?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>queryParams</strong>: <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L355" target="_blank" rel="noreferrer">types.ts:355</a></p>`,24)])])}const g=e(r,[["render",n]]);export{k as __pageData,g as default};
