import{_ as a,c as t,o as i,a3 as s}from"./chunks/framework.DJIHrpKd.js";const u=JSON.parse('{"title":"Class: RetryFeature","description":"","frontmatter":{},"headers":[],"relativePath":"api/features/classes/RetryFeature.md","filePath":"api/features/classes/RetryFeature.md"}'),r={name:"api/features/classes/RetryFeature.md"};function n(l,e,o,h,d,p){return i(),t("div",null,[...e[0]||(e[0]=[s(`<p><a href="./../../README.html"><strong>@apihive/core</strong></a></p><hr><p><a href="./../../modules.html">@apihive/core</a> / <a href="./../README.html">features</a> / RetryFeature</p><h1 id="class-retryfeature" tabindex="-1">Class: RetryFeature <a class="header-anchor" href="#class-retryfeature" aria-label="Permalink to &quot;Class: RetryFeature&quot;">​</a></h1><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L58" target="_blank" rel="noreferrer">features/retry.ts:58</a></p><p>Retry feature</p><p>It provides retry functionality to HTTPRequest.</p><p>Retry policy can be provided via:</p><ul><li>the factory/request&#39;s <a href="./../../index/classes/HTTPRequestFactory.html#withretry">HTTPRequestFactory.withRetry</a> method</li><li>the APIConfig&#39;s APIConfig property</li><li>requests metadata when <a href="#withmetaconfig">RetryFeature.withMetaConfig</a> is used</li></ul><h2 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h2><h2 id="implements-1" tabindex="-1">Implements <a class="header-anchor" href="#implements-1" aria-label="Permalink to &quot;Implements&quot;">​</a></h2><ul><li><a href="./../../index/interfaces/Feature.html"><code>Feature</code></a></li></ul><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><blockquote><p><strong>new RetryFeature</strong>(): <code>RetryFeature</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><code>readonly</code> <strong>name</strong>: <code>&quot;retry&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L60" target="_blank" rel="noreferrer">features/retry.ts:60</a></p><h4 id="implementation-of" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of" aria-label="Permalink to &quot;Implementation of&quot;">​</a></h4><p><a href="./../../index/interfaces/Feature.html"><code>Feature</code></a>.<a href="./../../index/interfaces/Feature.html#name"><code>name</code></a></p><hr><h3 id="priority" tabindex="-1">priority <a class="header-anchor" href="#priority" aria-label="Permalink to &quot;priority&quot;">​</a></h3><blockquote><p><code>readonly</code> <strong>priority</strong>: <code>80</code> = <code>80</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L61" target="_blank" rel="noreferrer">features/retry.ts:61</a></p><h4 id="implementation-of-1" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-1" aria-label="Permalink to &quot;Implementation of&quot;">​</a></h4><p><a href="./../../index/interfaces/Feature.html"><code>Feature</code></a>.<a href="./../../index/interfaces/Feature.html#priority"><code>priority</code></a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="getdelegates" tabindex="-1">getDelegates() <a class="header-anchor" href="#getdelegates" aria-label="Permalink to &quot;getDelegates()&quot;">​</a></h3><blockquote><p><strong>getDelegates</strong>(<code>factory</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L202" target="_blank" rel="noreferrer">features/retry.ts:202</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="factory" tabindex="-1">factory <a class="header-anchor" href="#factory" aria-label="Permalink to &quot;factory&quot;">​</a></h5><p><a href="./../../index/classes/HTTPRequestFactory.html"><code>HTTPRequestFactory</code></a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>object</code></p><h5 id="request" tabindex="-1">request <a class="header-anchor" href="#request" aria-label="Permalink to &quot;request&quot;">​</a></h5><blockquote><p><strong>request</strong>: <code>object</code></p></blockquote><h6 id="request-getfetchimpl" tabindex="-1">request.getFetchImpl() <a class="header-anchor" href="#request-getfetchimpl" aria-label="Permalink to &quot;request.getFetchImpl()&quot;">​</a></h6><blockquote><p><strong>getFetchImpl</strong>: (<code>config</code>, <code>baseFetch</code>) =&gt; <a href="./../../index/type-aliases/FetchLike.html"><code>FetchLike</code></a></p></blockquote><h6 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h6><h6 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h6><p><a href="./../../index/type-aliases/RequestConfig.html"><code>RequestConfig</code></a></p><h6 id="basefetch" tabindex="-1">baseFetch <a class="header-anchor" href="#basefetch" aria-label="Permalink to &quot;baseFetch&quot;">​</a></h6><p><a href="./../../index/type-aliases/FetchLike.html"><code>FetchLike</code></a></p><h6 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h6><p><a href="./../../index/type-aliases/FetchLike.html"><code>FetchLike</code></a></p><h4 id="implementation-of-2" tabindex="-1">Implementation of <a class="header-anchor" href="#implementation-of-2" aria-label="Permalink to &quot;Implementation of&quot;">​</a></h4><p><a href="./../../index/interfaces/Feature.html"><code>Feature</code></a>.<a href="./../../index/interfaces/Feature.html#getdelegates"><code>getDelegates</code></a></p><hr><h3 id="withdefaultattempts" tabindex="-1">withDefaultAttempts() <a class="header-anchor" href="#withdefaultattempts" aria-label="Permalink to &quot;withDefaultAttempts()&quot;">​</a></h3><blockquote><p><strong>withDefaultAttempts</strong>(<code>attempts</code>): <code>RetryFeature</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L97" target="_blank" rel="noreferrer">features/retry.ts:97</a></p><p>Set the default number of retry attempts</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="attempts" tabindex="-1">attempts <a class="header-anchor" href="#attempts" aria-label="Permalink to &quot;attempts&quot;">​</a></h5><p><code>number</code></p><p>The number of attempts to use</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><p>The updated feature instance</p><hr><h3 id="withdefaultretrycondition" tabindex="-1">withDefaultRetryCondition() <a class="header-anchor" href="#withdefaultretrycondition" aria-label="Permalink to &quot;withDefaultRetryCondition()&quot;">​</a></h3><blockquote><p><strong>withDefaultRetryCondition</strong>(<code>condition</code>): <code>RetryFeature</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L86" target="_blank" rel="noreferrer">features/retry.ts:86</a></p><p>Set the default retry condition for retry attempts</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="condition" tabindex="-1">condition <a class="header-anchor" href="#condition" aria-label="Permalink to &quot;condition&quot;">​</a></h5><p><a href="./../../index/type-aliases/RetryCondition.html"><code>RetryCondition</code></a></p><p>The condition to use</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><p>The updated feature instance</p><hr><h3 id="withdefaultretrydelay" tabindex="-1">withDefaultRetryDelay() <a class="header-anchor" href="#withdefaultretrydelay" aria-label="Permalink to &quot;withDefaultRetryDelay()&quot;">​</a></h3><blockquote><p><strong>withDefaultRetryDelay</strong>(<code>delay</code>): <code>RetryFeature</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L75" target="_blank" rel="noreferrer">features/retry.ts:75</a></p><p>Set the default delay strategy for retry attempts</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="delay" tabindex="-1">delay <a class="header-anchor" href="#delay" aria-label="Permalink to &quot;delay&quot;">​</a></h5><p><a href="./../../index/type-aliases/RetryDelay.html"><code>RetryDelay</code></a></p><p>The delay in milliseconds or a function that returns the delay</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><p>The updated feature instance</p><hr><h3 id="withdefaults" tabindex="-1">withDefaults() <a class="header-anchor" href="#withdefaults" aria-label="Permalink to &quot;withDefaults()&quot;">​</a></h3><blockquote><p><strong>withDefaults</strong>(<code>config</code>): <code>RetryFeature</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L102" target="_blank" rel="noreferrer">features/retry.ts:102</a></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="config-1" tabindex="-1">config <a class="header-anchor" href="#config-1" aria-label="Permalink to &quot;config&quot;">​</a></h5><p><a href="./../../index/type-aliases/RetryConfig.html"><code>RetryConfig</code></a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><hr><h3 id="withmetaconfig" tabindex="-1">withMetaConfig() <a class="header-anchor" href="#withmetaconfig" aria-label="Permalink to &quot;withMetaConfig()&quot;">​</a></h3><blockquote><p><strong>withMetaConfig</strong>(<code>metaConfig?</code>): <code>RetryFeature</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/features/retry.ts#L184" target="_blank" rel="noreferrer">features/retry.ts:184</a></p><p>Enable deriving retry behavior from a request&#39;s <code>meta</code> object.</p><p>This method activates a meta-driven switch to decide whether retries should be applied to a request when an explicit <code>config.retry</code> is not provided.</p><p>Behavior and precedence:</p><ul><li>If <code>config.retry</code> is set on the request, it takes absolute precedence and meta evaluation is ignored.</li><li>Otherwise, when meta config is enabled via this method, an <code>evaluator(meta)</code> is used to determine whether retries are enabled for that request.</li><li>When the evaluator returns <code>true</code>, the effective retry configuration is built by merging: <ol><li>feature defaults (<code>withDefaultAttempts</code>, <code>withDefaultRetryDelay</code>, <code>withDefaultRetryCondition</code>), then</li><li><code>metaConfig.defaults</code> if provided.</li></ol></li><li>When the evaluator returns <code>false</code>, the feature-level defaults still apply, but no meta overrides are added (equivalent to retries being &quot;off&quot; unless defaults specify otherwise).</li></ul><p>Defaults when not provided:</p><ul><li><code>normally</code>: <code>&#39;off&#39;</code>. If no evaluator is supplied, this baseline is used to interpret <code>meta.retry</code>.</li><li><code>evaluator</code>: If omitted, a safe default is used which: <ul><li>Expects <code>meta.retry</code> to be <code>boolean | undefined</code>.</li><li>Throws if <code>meta.retry</code> is present and not a boolean.</li><li>Returns <code>meta.retry ?? (normally === &#39;on&#39;)</code>.</li></ul></li><li><code>defaults</code>: Optional partial <code>RetryConfig</code> that will be merged on top of feature defaults when the evaluator enables retries.</li></ul><p>Notes:</p><ul><li><code>meta</code> is expected to be JSON-serializable.</li><li>If both meta config is enabled and <code>config.retry</code> is present, a warning is logged and the meta path is ignored in favor of <code>config.retry</code>.</li></ul><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="metaconfig" tabindex="-1">metaConfig? <a class="header-anchor" href="#metaconfig" aria-label="Permalink to &quot;metaConfig?&quot;">​</a></h5><p><a href="./../../index/type-aliases/RetryMetaConfig.html"><code>RetryMetaConfig</code></a></p><p>Optional configuration controlling how meta evaluation works:</p><ul><li><code>normally</code>: &#39;on&#39; | &#39;off&#39; baseline used by the default evaluator.</li><li><code>evaluator(meta)</code>: returns <code>true</code> to enable retries; may throw for invalid meta.</li><li><code>defaults</code>: partial <code>RetryConfig</code> applied when evaluator enables retries.</li></ul><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>RetryFeature</code></p><p>The updated feature instance.</p><h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Enable meta evaluation with defaults</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">retryFeature.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withMetaConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  normally: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaults: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    attempts: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retryDelay: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exponentialBackoff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      initialDelay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      multiplier: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      maxDelay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      jitter: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Later, per request</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">factory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createGETRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/items&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withMeta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ retry: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">retryFeature.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withMetaConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  normally: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;on&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  evaluator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.userTier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pro&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.allowRetry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaults: { attempts: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,119)])])}const k=a(r,[["render",n]]);export{u as __pageData,k as default};
