import{_ as t,c as r,o as a,a3 as o}from"./chunks/framework.DJIHrpKd.js";const h=JSON.parse('{"title":"Type Alias: SSESubscription","description":"","frontmatter":{},"headers":[],"relativePath":"api/index/type-aliases/SSESubscription.md","filePath":"api/index/type-aliases/SSESubscription.md"}'),s={name:"api/index/type-aliases/SSESubscription.md"};function i(n,e,c,p,l,d){return a(),r("div",null,[...e[0]||(e[0]=[o('<p><a href="./../../README.html"><strong>@apihive/core</strong></a></p><hr><p><a href="./../../modules.html">@apihive/core</a> / <a href="./../README.html">index</a> / SSESubscription</p><h1 id="type-alias-ssesubscription" tabindex="-1">Type Alias: SSESubscription <a class="header-anchor" href="#type-alias-ssesubscription" aria-label="Permalink to &quot;Type Alias: SSESubscription&quot;">​</a></h1><blockquote><p><strong>SSESubscription</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L278" target="_blank" rel="noreferrer">types.ts:278</a></p><p>Handle returned by SSE requests upon execute().</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="close" tabindex="-1">close() <a class="header-anchor" href="#close" aria-label="Permalink to &quot;close()&quot;">​</a></h3><blockquote><p><strong>close</strong>: () =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L280" target="_blank" rel="noreferrer">types.ts:280</a></p><p>Closes the underlying SSE connection.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="geteventsource" tabindex="-1">getEventSource()? <a class="header-anchor" href="#geteventsource" aria-label="Permalink to &quot;getEventSource()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>getEventSource</strong>: () =&gt; <code>EventSource</code> | <code>null</code></p></blockquote><p>Defined in: <a href="https://github.com/cleverplatypus/apihive-core/blob/8576eea91e7e4d9e5485b86d7ca3c0df4a424549/src/types.ts#L282" target="_blank" rel="noreferrer">types.ts:282</a></p><p>Optional accessor to the underlying EventSource for advanced scenarios.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSource</code> | <code>null</code></p>',21)])])}const b=t(s,[["render",i]]);export{h as __pageData,b as default};
